====================================
ОБЩАЯ ФУНКЦИОНАЛЬНОСТЬ
1. Регистрация
-через сайт
показать предупреждение что инвайт без активации будет удалени в течении 24ч
вызывать апи метод Createaccount 
который создает необходимые записи в бд
который пишет в очередь "rabbitMQ по добавлению новых юзеров" имя скайпа и/или имя жаббера
worker высылает линку активации https://domain.com/activate?user_hash=HASH&salt=BCRYPT_PASSWORD (при повторном использовании линки давть сообшение что линка не активна)
которая ведет на сайт и обновляет поле user.status=AC и апдейтает base service как AC
и предупреждает что акк без активации будет удалени в течении 24ч

-через клиента
Добавляем пользователю клиента и пишем любое сообщение (на сайте указать факт что надо чтото написать а не просто добавить)
клиент видит что сообщение от незнакомого юзера
и пишет в очередь "rabbitMQ по вызову api" имя скайпа и/или имя жаббера и апи метод Createaccount
для которого worker вызывает апи полученный метод Createaccount
который создает необходимые записи в бд (табл user, user_service)
который пишет в очередь "rabbitMQ по добавлению новых юзеров" имя скайпа и/или имя жаббера
worker высылает линку валидации
которая ведет на сайт и обновляет поле user.status=AC и апдейтает base service как AC
и предупреждает что акк без активации будет удалени в течении 24ч


2. Авторизация
-через сайт
через api Login стандартная авторизация

-через временную ссылку клиента
Добавить на клиенте новую команду #loginlink по аналогии с командой #forgotpass который дает линку
https://domain.com/temporary_login?user_hash=HASH&salt=HASH FROM TABLE temporary_link (при повторном использовании линки давть сообшение что линка не активна)
только lanfing page для нее dashboard, при ее активации добавлять запись в таблицу temporary_link запись 
с хешем и юзером и удалять когда ссылка использована.

3. Добавление Сервиса
-через сайт
вызывать api метод AddService
который создает необходимые записи в бд и рекешит меню юзера
который пишет в очередь "rabbitMQ по добавлению новых юзеров" 
имя скайпа и/или имя жаббера для этого сервиса

Resend сервиса делать как и добавление (только авторизацию выслать)

-через клиента
Если сервис бесплатный, то
писать в очередь "rabbitMQ по вызову api" имя скайпа и/или имя жаббера и апи метод AddService
для которого worker вызывает апи полученный метод AddService
который создает необходимые записи в бд и рекешит меню юзера
который пишет в очередь "rabbitMQ по добавлению новых юзеров" 
имя скайпа и/или имя жаббера для этого сервиса

Если сервис НЕ бесплатный, то
показывать ошибку: не хватает очков/денег (в этот же или в BASE???)

при добавлении нового IM высылать запросы на новые сервисы

4. Удаление сервиса
-через сайт

-через клиента
писать в очередь "rabbitMQ по вызову api" имя скайпа и/или имя жаббера и апи метод DeleteService
для которого worker вызывает апи полученный метод DeleteService
который обновляет необходимые записи в бд и рекешит меню юзера
который пишет в очередь "rabbitMQ по удалению юзеров" 
имя скайпа и/или имя жаббера для этого сервиса и удаляет этого юзера

5. Удаление аккаунта
-через сайт

-через клиента
писать в очередь "rabbitMQ по вызову api" имя скайпа и/или имя жаббера и апи метод DeleteAccount
для которого worker вызывает апи полученный метод DeleteAccount
который обновляет необходимые записи в бд (не удаляет)
который пишет во все очереди "rabbitMQ по удалению юзеров" 
имя скайпа и/или имя жаббера и удаляет этого юзера

6. Инвайт Другого пользователя
-через сайт
показать предупреждение что инвайт без активации будет удалени в течении 24ч
вызывать апи метод InviteUser 
который создает необходимые записи в бд
который обновляет поле points для юзеров
который пишет в очередь "rabbitMQ по добавлению новых юзеров" имя скайпа и/или имя жаббера и тиа ИНВАЙТ
"Вас пригласил пользователь ХХХ в http://ссылка на сервис. Чтобы зарегистрироваться просто авторизуйте этого помощника"
и предупреждает что инвайт без активации будет удалени в течении 24ч

высылать со ссылкой на FAQ - где описать что за инвайт дают очки.
в сслыке указывать хеш пользователя сделавшего инвайт (по какой новый акк активируется тот пригласивший и получит очки)

7. Смена пароля
-через сайт
Вызывает апи ChangePassword

-через временную ссылку клиента
Сократить команду #forgotpass до #forgot,  который дает линку
https://domain.com/forgot_password?user_hash=HASH&salt=HASH FROM TABLE temporary_link (при повторном использовании линки давть сообшение что линка не активна)
при ее активации добавлять запись в таблицу temporary_link запись 
с хешем и юзером и удалять когда ссылка использована.
landing page страница смены пароля (через сайт)

8. Рассылка новостей (admin page)
смотреть user.date_skype (user.date_jabber) чтобы знать какой клиент был последний активным
и тому высылать сообщение
писать в очередь spamer

====================================
ФУНКЦИОНАЛЬНОСТЬ КЛИЕНТОВ


1. Сборщик мусора
удалять пользователей не активировавших свой аккаунт в течении 24 часов
удалять инвайты не активированные в течении 24 часов
сделать через cron (добавить в readme)


2. Worker для rabbitMQ по добавлению новых юзеров
чекает очередь, добавляет юзера для данного сервиса, 
создает ссылку на валидацию регистрации и отдает клиенту 
(справедливо только для BASE сервиса)

3. Worker для rabbitMQ по вызову api
вызывает апи и пишет ошибки или респонс от апи в очередь "w2"

4. Отправка сообщений пользователем клиенту
- неактивный потзователь user.status != AC показывать сообщение об активировании акка и давать линку на активацию (см п.1)
- активный потзователь добавляет платный сервис оказывать сообщение о том что надо добавить сервис через сайт http://
- активный потзователь пишет в бесплатный сервис - делать добавление сервисв (см п.3)
- неизвестный потзователь пишет в бесплатный или base сервис - делать регистрацию (см п.1)
- неизвестный потзователь добавляет платный сервис оказывать сообщение о том что надо добавить сервис через сайт http://
- активный потзователь пишет в доступный сервис обновлять user.date_skype (user.date_jabber) чтобы знать какой клиент был последний активным


====================================
ПОСЛЕДОВАТЕЛЬНОСТЬ ЗАПУСКА СЕРВИСА

1. Freebsd сервер (nginx php-fpm+(rabbitmq lib) mysql APC memcahe memcached rabbitMQ)
2. Debian сервер (php+(rabbitmq lib)+(DBUS lib) skype jabber)

1 пользователдь системы - 1 сервис

Например для "общего" сервиса, создаем пользователя base
запускаем 3 окна терминала (для skype и jabber и общий) и открываем
в каждом 1 вкладку:
- сам "общий" сервис

и общий:
- апдейт из свн
- (w1) worker для rabbitMQ по вызову api или удаленного url (общий для всех сервисов) (пишет ошибки или респонс от апи в очередь "w2")
- (w2) worker user_op.php для rabbitMQ по добавлению/удалению/повторной авторизации новых юзеров
- (w3) worker spamer.php для rabbitMQ по рассылке новостей  и рассылке некоторых сообщений клиентам (рассылка через вызов хелпера)

Для "отдельных" сервисов, создаем пользователя ИМЯ_СЕРВИСА (short_name из табл service)
запускаем 3 окна терминала (для skype и jabber и общий) и открываем
в каждом 1 вкладку:
- сам "отдельный" сервис

и общий:
- апдейт из свн
- (w2) worker user_op.php для rabbitMQ по добавлению/удалению/повторной авторизации новых юзеров 
- (w3) worker spamer.php для rabbitMQ по рассылке новостей  и рассылке некоторых сообщений клиентам (рассылка через вызов хелпера)